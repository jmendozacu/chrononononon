<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product additional attributes template
 *
 * @see Mage_Catalog_Block_Product_View_Attributes
 */
?>
<?php
    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct()
?>
<?php if($_additional = $this->getAdditionalData()): ?>
    <h2><?php echo $this->__('Additional Information') ?></h2>
    <table class="data-table" id="product-attribute-specs-table">
        <col width="15%" />
	<col width="35%" />
        <col width="15%" />
	<col width="35%" />
        <tbody>


<?php


/**
*$_downtown = array_filter($_additional); 
*/
?>
<?php function retAttribute($i,$_values,$_helper,$_product) {
	$_fdata1 = $_values[$i];
	$attVal1 = $_helper->productAttribute($_product, $_fdata1['value'], $_fdata1['code']);
	$_attribute1 = $_product->getResource()->getAttribute($_fdata1['code']);
	$_propExit=false;
	
	if ($attVal1) {
	
	if (is_null($_product->getData($_fdata1['code'])) && (!$_product->getAttributeText($_fdata1['code']))) {
		
		do {
			$i++;
			$_fdata1 = $_values[$i];
			$attVal1 = $_helper->productAttribute($_product, $_fdata1['value'], $_fdata1['code']);
			$_attribute1 = $_product->getResource()->getAttribute($_fdata1['code']);
		} while (is_null($_product->getData($_fdata1['code']) && ((string)$_attribute1->getFrontend()->getValue($_product) != '')));
	}
	return array('_fdata1'=>$_fdata1['code'],'_attribute1'=>$_attribute1,'attVal1'=>$attVal1, 'label1'=>$_fdata1['label'],'counter'=>$i);
	} else return;
}
?>

<?php $new_array = array_values($_additional); ?>

        <?php $_values = array_values($new_array); $icount=-1;?>
        <?php for($i = 0; $i < count($new_array); $i+=2): ?>	

            <tr>
				<?php for($j = 0; $j < 2; $j++): ?>

				<?php
					if ($oldCount>$icount) $icount = $attribs['counter'];
					$icount ++;
					$attribs = retAttribute ($icount,$_values,$_helper,$_product);
					$oldCount = $attribs['counter'];
					
					if (is_array($attribs)) {?>
					
						<th class="label"><?php echo $this->htmlEscape($this->__($attribs['label1'])) ?></th>
						<td class="data"><?php echo $attribs['attVal1'] ?></td>
					
				<?php } ?>
				<?php endfor; ?>
            </tr>
	<?php  ?>
        <?php endfor; ?>


        </tbody>
    </table>
    <script type="text/javascript">decorateTable('product-attribute-specs-table')</script>
<?php endif;?>

